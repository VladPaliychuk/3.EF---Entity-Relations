// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentSystem.DAL.Data;

#nullable disable

namespace StudentSystem.DAL.Migrations
{
    [DbContext(typeof(StudentContext))]
    [Migration("20230512184338_01")]
    partial class _01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudentSystem.DAL.Data.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("Description")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(80)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            Description = "OOP description",
                            EndDate = new DateTime(2023, 5, 12, 21, 43, 37, 663, DateTimeKind.Local).AddTicks(1308),
                            Name = "OOP",
                            Price = 1000,
                            StartDate = new DateTime(2023, 5, 12, 21, 43, 37, 660, DateTimeKind.Local).AddTicks(8156)
                        },
                        new
                        {
                            CourseId = 2,
                            Description = "DB Description",
                            EndDate = new DateTime(2023, 5, 12, 21, 43, 37, 663, DateTimeKind.Local).AddTicks(1780),
                            Name = "DB",
                            Price = 2000,
                            StartDate = new DateTime(2023, 5, 12, 21, 43, 37, 663, DateTimeKind.Local).AddTicks(1774)
                        });
                });

            modelBuilder.Entity("StudentSystem.DAL.Data.Models.HomeworkSubmission", b =>
                {
                    b.Property<int>("HomeworkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HomeworkId"));

                    b.Property<string>("Content")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("ContentType")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SubmissionTime")
                        .HasColumnType("datetime2");

                    b.HasKey("HomeworkId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("HomeworkSubmissions");

                    b.HasData(
                        new
                        {
                            HomeworkId = 1,
                            Content = "Task",
                            ContentType = 1,
                            CourseId = 1,
                            StudentId = 1,
                            SubmissionTime = new DateTime(2023, 5, 12, 21, 43, 37, 667, DateTimeKind.Local).AddTicks(9794)
                        },
                        new
                        {
                            HomeworkId = 2,
                            Content = "Task",
                            ContentType = 0,
                            CourseId = 2,
                            StudentId = 1,
                            SubmissionTime = new DateTime(2023, 5, 12, 21, 43, 37, 668, DateTimeKind.Local).AddTicks(266)
                        });
                });

            modelBuilder.Entity("StudentSystem.DAL.Data.Models.Resource", b =>
                {
                    b.Property<int>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResourceId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ResourceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ResourceId");

                    b.HasIndex("CourseId");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            ResourceId = 1,
                            CourseId = 1,
                            Name = ".NET Code First",
                            ResourceType = "Video",
                            Url = "www.video.com"
                        },
                        new
                        {
                            ResourceId = 2,
                            CourseId = 2,
                            Name = "c# Framework relations",
                            ResourceType = "Video",
                            Url = "www.video.com"
                        });
                });

            modelBuilder.Entity("StudentSystem.DAL.Data.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("RegisteredOn")
                        .HasColumnType("datetime2");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            Birthday = new DateTime(2023, 5, 12, 21, 43, 37, 670, DateTimeKind.Local).AddTicks(6150),
                            Name = "Oleh",
                            PhoneNumber = "+123456789",
                            RegisteredOn = new DateTime(2023, 5, 12, 21, 43, 37, 670, DateTimeKind.Local).AddTicks(5874)
                        },
                        new
                        {
                            StudentId = 2,
                            Birthday = new DateTime(2023, 5, 12, 21, 43, 37, 670, DateTimeKind.Local).AddTicks(6364),
                            Name = "Ivan",
                            PhoneNumber = "+123456789",
                            RegisteredOn = new DateTime(2023, 5, 12, 21, 43, 37, 670, DateTimeKind.Local).AddTicks(6359)
                        });
                });

            modelBuilder.Entity("StudentSystem.DAL.Data.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentCources");
                });

            modelBuilder.Entity("StudentSystem.DAL.Data.Models.HomeworkSubmission", b =>
                {
                    b.HasOne("StudentSystem.DAL.Data.Models.Course", "Course")
                        .WithMany("HomeworkSubmissions")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentSystem.DAL.Data.Models.Student", "Student")
                        .WithMany("HomeworkSubmissions")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentSystem.DAL.Data.Models.Resource", b =>
                {
                    b.HasOne("StudentSystem.DAL.Data.Models.Course", "Course")
                        .WithMany("Resources")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("StudentSystem.DAL.Data.Models.StudentCourse", b =>
                {
                    b.HasOne("StudentSystem.DAL.Data.Models.Course", "Course")
                        .WithMany("StudentCources")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentSystem.DAL.Data.Models.Student", "Student")
                        .WithMany("StudentCources")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentSystem.DAL.Data.Models.Course", b =>
                {
                    b.Navigation("HomeworkSubmissions");

                    b.Navigation("Resources");

                    b.Navigation("StudentCources");
                });

            modelBuilder.Entity("StudentSystem.DAL.Data.Models.Student", b =>
                {
                    b.Navigation("HomeworkSubmissions");

                    b.Navigation("StudentCources");
                });
#pragma warning restore 612, 618
        }
    }
}
